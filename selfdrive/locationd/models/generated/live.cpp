#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2777757199287464545) {
   out_2777757199287464545[0] = 0;
   out_2777757199287464545[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2777757199287464545[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2777757199287464545[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2777757199287464545[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2777757199287464545[5] = -sin(in_vec[1]);
   out_2777757199287464545[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2777757199287464545[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2777757199287464545[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2777757199287464545[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2777757199287464545[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2777757199287464545[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2777757199287464545[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2777757199287464545[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2777757199287464545[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2777757199287464545[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2777757199287464545[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2777757199287464545[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5367815787538398854) {
   out_5367815787538398854[0] = delta_x[0] + nom_x[0];
   out_5367815787538398854[1] = delta_x[1] + nom_x[1];
   out_5367815787538398854[2] = delta_x[2] + nom_x[2];
   out_5367815787538398854[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5367815787538398854[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5367815787538398854[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5367815787538398854[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5367815787538398854[7] = delta_x[6] + nom_x[7];
   out_5367815787538398854[8] = delta_x[7] + nom_x[8];
   out_5367815787538398854[9] = delta_x[8] + nom_x[9];
   out_5367815787538398854[10] = delta_x[9] + nom_x[10];
   out_5367815787538398854[11] = delta_x[10] + nom_x[11];
   out_5367815787538398854[12] = delta_x[11] + nom_x[12];
   out_5367815787538398854[13] = delta_x[12] + nom_x[13];
   out_5367815787538398854[14] = delta_x[13] + nom_x[14];
   out_5367815787538398854[15] = delta_x[14] + nom_x[15];
   out_5367815787538398854[16] = delta_x[15] + nom_x[16];
   out_5367815787538398854[17] = delta_x[16] + nom_x[17];
   out_5367815787538398854[18] = delta_x[17] + nom_x[18];
   out_5367815787538398854[19] = delta_x[18] + nom_x[19];
   out_5367815787538398854[20] = delta_x[19] + nom_x[20];
   out_5367815787538398854[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5584533176148752683) {
   out_5584533176148752683[0] = -nom_x[0] + true_x[0];
   out_5584533176148752683[1] = -nom_x[1] + true_x[1];
   out_5584533176148752683[2] = -nom_x[2] + true_x[2];
   out_5584533176148752683[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5584533176148752683[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5584533176148752683[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5584533176148752683[6] = -nom_x[7] + true_x[7];
   out_5584533176148752683[7] = -nom_x[8] + true_x[8];
   out_5584533176148752683[8] = -nom_x[9] + true_x[9];
   out_5584533176148752683[9] = -nom_x[10] + true_x[10];
   out_5584533176148752683[10] = -nom_x[11] + true_x[11];
   out_5584533176148752683[11] = -nom_x[12] + true_x[12];
   out_5584533176148752683[12] = -nom_x[13] + true_x[13];
   out_5584533176148752683[13] = -nom_x[14] + true_x[14];
   out_5584533176148752683[14] = -nom_x[15] + true_x[15];
   out_5584533176148752683[15] = -nom_x[16] + true_x[16];
   out_5584533176148752683[16] = -nom_x[17] + true_x[17];
   out_5584533176148752683[17] = -nom_x[18] + true_x[18];
   out_5584533176148752683[18] = -nom_x[19] + true_x[19];
   out_5584533176148752683[19] = -nom_x[20] + true_x[20];
   out_5584533176148752683[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4329246194809616632) {
   out_4329246194809616632[0] = 1.0;
   out_4329246194809616632[1] = 0;
   out_4329246194809616632[2] = 0;
   out_4329246194809616632[3] = 0;
   out_4329246194809616632[4] = 0;
   out_4329246194809616632[5] = 0;
   out_4329246194809616632[6] = 0;
   out_4329246194809616632[7] = 0;
   out_4329246194809616632[8] = 0;
   out_4329246194809616632[9] = 0;
   out_4329246194809616632[10] = 0;
   out_4329246194809616632[11] = 0;
   out_4329246194809616632[12] = 0;
   out_4329246194809616632[13] = 0;
   out_4329246194809616632[14] = 0;
   out_4329246194809616632[15] = 0;
   out_4329246194809616632[16] = 0;
   out_4329246194809616632[17] = 0;
   out_4329246194809616632[18] = 0;
   out_4329246194809616632[19] = 0;
   out_4329246194809616632[20] = 0;
   out_4329246194809616632[21] = 0;
   out_4329246194809616632[22] = 1.0;
   out_4329246194809616632[23] = 0;
   out_4329246194809616632[24] = 0;
   out_4329246194809616632[25] = 0;
   out_4329246194809616632[26] = 0;
   out_4329246194809616632[27] = 0;
   out_4329246194809616632[28] = 0;
   out_4329246194809616632[29] = 0;
   out_4329246194809616632[30] = 0;
   out_4329246194809616632[31] = 0;
   out_4329246194809616632[32] = 0;
   out_4329246194809616632[33] = 0;
   out_4329246194809616632[34] = 0;
   out_4329246194809616632[35] = 0;
   out_4329246194809616632[36] = 0;
   out_4329246194809616632[37] = 0;
   out_4329246194809616632[38] = 0;
   out_4329246194809616632[39] = 0;
   out_4329246194809616632[40] = 0;
   out_4329246194809616632[41] = 0;
   out_4329246194809616632[42] = 0;
   out_4329246194809616632[43] = 0;
   out_4329246194809616632[44] = 1.0;
   out_4329246194809616632[45] = 0;
   out_4329246194809616632[46] = 0;
   out_4329246194809616632[47] = 0;
   out_4329246194809616632[48] = 0;
   out_4329246194809616632[49] = 0;
   out_4329246194809616632[50] = 0;
   out_4329246194809616632[51] = 0;
   out_4329246194809616632[52] = 0;
   out_4329246194809616632[53] = 0;
   out_4329246194809616632[54] = 0;
   out_4329246194809616632[55] = 0;
   out_4329246194809616632[56] = 0;
   out_4329246194809616632[57] = 0;
   out_4329246194809616632[58] = 0;
   out_4329246194809616632[59] = 0;
   out_4329246194809616632[60] = 0;
   out_4329246194809616632[61] = 0;
   out_4329246194809616632[62] = 0;
   out_4329246194809616632[63] = 0;
   out_4329246194809616632[64] = 0;
   out_4329246194809616632[65] = 0;
   out_4329246194809616632[66] = -0.5*state[4];
   out_4329246194809616632[67] = -0.5*state[5];
   out_4329246194809616632[68] = -0.5*state[6];
   out_4329246194809616632[69] = 0;
   out_4329246194809616632[70] = 0;
   out_4329246194809616632[71] = 0;
   out_4329246194809616632[72] = 0;
   out_4329246194809616632[73] = 0;
   out_4329246194809616632[74] = 0;
   out_4329246194809616632[75] = 0;
   out_4329246194809616632[76] = 0;
   out_4329246194809616632[77] = 0;
   out_4329246194809616632[78] = 0;
   out_4329246194809616632[79] = 0;
   out_4329246194809616632[80] = 0;
   out_4329246194809616632[81] = 0;
   out_4329246194809616632[82] = 0;
   out_4329246194809616632[83] = 0;
   out_4329246194809616632[84] = 0;
   out_4329246194809616632[85] = 0;
   out_4329246194809616632[86] = 0;
   out_4329246194809616632[87] = 0.5*state[3];
   out_4329246194809616632[88] = 0.5*state[6];
   out_4329246194809616632[89] = -0.5*state[5];
   out_4329246194809616632[90] = 0;
   out_4329246194809616632[91] = 0;
   out_4329246194809616632[92] = 0;
   out_4329246194809616632[93] = 0;
   out_4329246194809616632[94] = 0;
   out_4329246194809616632[95] = 0;
   out_4329246194809616632[96] = 0;
   out_4329246194809616632[97] = 0;
   out_4329246194809616632[98] = 0;
   out_4329246194809616632[99] = 0;
   out_4329246194809616632[100] = 0;
   out_4329246194809616632[101] = 0;
   out_4329246194809616632[102] = 0;
   out_4329246194809616632[103] = 0;
   out_4329246194809616632[104] = 0;
   out_4329246194809616632[105] = 0;
   out_4329246194809616632[106] = 0;
   out_4329246194809616632[107] = 0;
   out_4329246194809616632[108] = -0.5*state[6];
   out_4329246194809616632[109] = 0.5*state[3];
   out_4329246194809616632[110] = 0.5*state[4];
   out_4329246194809616632[111] = 0;
   out_4329246194809616632[112] = 0;
   out_4329246194809616632[113] = 0;
   out_4329246194809616632[114] = 0;
   out_4329246194809616632[115] = 0;
   out_4329246194809616632[116] = 0;
   out_4329246194809616632[117] = 0;
   out_4329246194809616632[118] = 0;
   out_4329246194809616632[119] = 0;
   out_4329246194809616632[120] = 0;
   out_4329246194809616632[121] = 0;
   out_4329246194809616632[122] = 0;
   out_4329246194809616632[123] = 0;
   out_4329246194809616632[124] = 0;
   out_4329246194809616632[125] = 0;
   out_4329246194809616632[126] = 0;
   out_4329246194809616632[127] = 0;
   out_4329246194809616632[128] = 0;
   out_4329246194809616632[129] = 0.5*state[5];
   out_4329246194809616632[130] = -0.5*state[4];
   out_4329246194809616632[131] = 0.5*state[3];
   out_4329246194809616632[132] = 0;
   out_4329246194809616632[133] = 0;
   out_4329246194809616632[134] = 0;
   out_4329246194809616632[135] = 0;
   out_4329246194809616632[136] = 0;
   out_4329246194809616632[137] = 0;
   out_4329246194809616632[138] = 0;
   out_4329246194809616632[139] = 0;
   out_4329246194809616632[140] = 0;
   out_4329246194809616632[141] = 0;
   out_4329246194809616632[142] = 0;
   out_4329246194809616632[143] = 0;
   out_4329246194809616632[144] = 0;
   out_4329246194809616632[145] = 0;
   out_4329246194809616632[146] = 0;
   out_4329246194809616632[147] = 0;
   out_4329246194809616632[148] = 0;
   out_4329246194809616632[149] = 0;
   out_4329246194809616632[150] = 0;
   out_4329246194809616632[151] = 0;
   out_4329246194809616632[152] = 0;
   out_4329246194809616632[153] = 1.0;
   out_4329246194809616632[154] = 0;
   out_4329246194809616632[155] = 0;
   out_4329246194809616632[156] = 0;
   out_4329246194809616632[157] = 0;
   out_4329246194809616632[158] = 0;
   out_4329246194809616632[159] = 0;
   out_4329246194809616632[160] = 0;
   out_4329246194809616632[161] = 0;
   out_4329246194809616632[162] = 0;
   out_4329246194809616632[163] = 0;
   out_4329246194809616632[164] = 0;
   out_4329246194809616632[165] = 0;
   out_4329246194809616632[166] = 0;
   out_4329246194809616632[167] = 0;
   out_4329246194809616632[168] = 0;
   out_4329246194809616632[169] = 0;
   out_4329246194809616632[170] = 0;
   out_4329246194809616632[171] = 0;
   out_4329246194809616632[172] = 0;
   out_4329246194809616632[173] = 0;
   out_4329246194809616632[174] = 0;
   out_4329246194809616632[175] = 1.0;
   out_4329246194809616632[176] = 0;
   out_4329246194809616632[177] = 0;
   out_4329246194809616632[178] = 0;
   out_4329246194809616632[179] = 0;
   out_4329246194809616632[180] = 0;
   out_4329246194809616632[181] = 0;
   out_4329246194809616632[182] = 0;
   out_4329246194809616632[183] = 0;
   out_4329246194809616632[184] = 0;
   out_4329246194809616632[185] = 0;
   out_4329246194809616632[186] = 0;
   out_4329246194809616632[187] = 0;
   out_4329246194809616632[188] = 0;
   out_4329246194809616632[189] = 0;
   out_4329246194809616632[190] = 0;
   out_4329246194809616632[191] = 0;
   out_4329246194809616632[192] = 0;
   out_4329246194809616632[193] = 0;
   out_4329246194809616632[194] = 0;
   out_4329246194809616632[195] = 0;
   out_4329246194809616632[196] = 0;
   out_4329246194809616632[197] = 1.0;
   out_4329246194809616632[198] = 0;
   out_4329246194809616632[199] = 0;
   out_4329246194809616632[200] = 0;
   out_4329246194809616632[201] = 0;
   out_4329246194809616632[202] = 0;
   out_4329246194809616632[203] = 0;
   out_4329246194809616632[204] = 0;
   out_4329246194809616632[205] = 0;
   out_4329246194809616632[206] = 0;
   out_4329246194809616632[207] = 0;
   out_4329246194809616632[208] = 0;
   out_4329246194809616632[209] = 0;
   out_4329246194809616632[210] = 0;
   out_4329246194809616632[211] = 0;
   out_4329246194809616632[212] = 0;
   out_4329246194809616632[213] = 0;
   out_4329246194809616632[214] = 0;
   out_4329246194809616632[215] = 0;
   out_4329246194809616632[216] = 0;
   out_4329246194809616632[217] = 0;
   out_4329246194809616632[218] = 0;
   out_4329246194809616632[219] = 1.0;
   out_4329246194809616632[220] = 0;
   out_4329246194809616632[221] = 0;
   out_4329246194809616632[222] = 0;
   out_4329246194809616632[223] = 0;
   out_4329246194809616632[224] = 0;
   out_4329246194809616632[225] = 0;
   out_4329246194809616632[226] = 0;
   out_4329246194809616632[227] = 0;
   out_4329246194809616632[228] = 0;
   out_4329246194809616632[229] = 0;
   out_4329246194809616632[230] = 0;
   out_4329246194809616632[231] = 0;
   out_4329246194809616632[232] = 0;
   out_4329246194809616632[233] = 0;
   out_4329246194809616632[234] = 0;
   out_4329246194809616632[235] = 0;
   out_4329246194809616632[236] = 0;
   out_4329246194809616632[237] = 0;
   out_4329246194809616632[238] = 0;
   out_4329246194809616632[239] = 0;
   out_4329246194809616632[240] = 0;
   out_4329246194809616632[241] = 1.0;
   out_4329246194809616632[242] = 0;
   out_4329246194809616632[243] = 0;
   out_4329246194809616632[244] = 0;
   out_4329246194809616632[245] = 0;
   out_4329246194809616632[246] = 0;
   out_4329246194809616632[247] = 0;
   out_4329246194809616632[248] = 0;
   out_4329246194809616632[249] = 0;
   out_4329246194809616632[250] = 0;
   out_4329246194809616632[251] = 0;
   out_4329246194809616632[252] = 0;
   out_4329246194809616632[253] = 0;
   out_4329246194809616632[254] = 0;
   out_4329246194809616632[255] = 0;
   out_4329246194809616632[256] = 0;
   out_4329246194809616632[257] = 0;
   out_4329246194809616632[258] = 0;
   out_4329246194809616632[259] = 0;
   out_4329246194809616632[260] = 0;
   out_4329246194809616632[261] = 0;
   out_4329246194809616632[262] = 0;
   out_4329246194809616632[263] = 1.0;
   out_4329246194809616632[264] = 0;
   out_4329246194809616632[265] = 0;
   out_4329246194809616632[266] = 0;
   out_4329246194809616632[267] = 0;
   out_4329246194809616632[268] = 0;
   out_4329246194809616632[269] = 0;
   out_4329246194809616632[270] = 0;
   out_4329246194809616632[271] = 0;
   out_4329246194809616632[272] = 0;
   out_4329246194809616632[273] = 0;
   out_4329246194809616632[274] = 0;
   out_4329246194809616632[275] = 0;
   out_4329246194809616632[276] = 0;
   out_4329246194809616632[277] = 0;
   out_4329246194809616632[278] = 0;
   out_4329246194809616632[279] = 0;
   out_4329246194809616632[280] = 0;
   out_4329246194809616632[281] = 0;
   out_4329246194809616632[282] = 0;
   out_4329246194809616632[283] = 0;
   out_4329246194809616632[284] = 0;
   out_4329246194809616632[285] = 1.0;
   out_4329246194809616632[286] = 0;
   out_4329246194809616632[287] = 0;
   out_4329246194809616632[288] = 0;
   out_4329246194809616632[289] = 0;
   out_4329246194809616632[290] = 0;
   out_4329246194809616632[291] = 0;
   out_4329246194809616632[292] = 0;
   out_4329246194809616632[293] = 0;
   out_4329246194809616632[294] = 0;
   out_4329246194809616632[295] = 0;
   out_4329246194809616632[296] = 0;
   out_4329246194809616632[297] = 0;
   out_4329246194809616632[298] = 0;
   out_4329246194809616632[299] = 0;
   out_4329246194809616632[300] = 0;
   out_4329246194809616632[301] = 0;
   out_4329246194809616632[302] = 0;
   out_4329246194809616632[303] = 0;
   out_4329246194809616632[304] = 0;
   out_4329246194809616632[305] = 0;
   out_4329246194809616632[306] = 0;
   out_4329246194809616632[307] = 1.0;
   out_4329246194809616632[308] = 0;
   out_4329246194809616632[309] = 0;
   out_4329246194809616632[310] = 0;
   out_4329246194809616632[311] = 0;
   out_4329246194809616632[312] = 0;
   out_4329246194809616632[313] = 0;
   out_4329246194809616632[314] = 0;
   out_4329246194809616632[315] = 0;
   out_4329246194809616632[316] = 0;
   out_4329246194809616632[317] = 0;
   out_4329246194809616632[318] = 0;
   out_4329246194809616632[319] = 0;
   out_4329246194809616632[320] = 0;
   out_4329246194809616632[321] = 0;
   out_4329246194809616632[322] = 0;
   out_4329246194809616632[323] = 0;
   out_4329246194809616632[324] = 0;
   out_4329246194809616632[325] = 0;
   out_4329246194809616632[326] = 0;
   out_4329246194809616632[327] = 0;
   out_4329246194809616632[328] = 0;
   out_4329246194809616632[329] = 1.0;
   out_4329246194809616632[330] = 0;
   out_4329246194809616632[331] = 0;
   out_4329246194809616632[332] = 0;
   out_4329246194809616632[333] = 0;
   out_4329246194809616632[334] = 0;
   out_4329246194809616632[335] = 0;
   out_4329246194809616632[336] = 0;
   out_4329246194809616632[337] = 0;
   out_4329246194809616632[338] = 0;
   out_4329246194809616632[339] = 0;
   out_4329246194809616632[340] = 0;
   out_4329246194809616632[341] = 0;
   out_4329246194809616632[342] = 0;
   out_4329246194809616632[343] = 0;
   out_4329246194809616632[344] = 0;
   out_4329246194809616632[345] = 0;
   out_4329246194809616632[346] = 0;
   out_4329246194809616632[347] = 0;
   out_4329246194809616632[348] = 0;
   out_4329246194809616632[349] = 0;
   out_4329246194809616632[350] = 0;
   out_4329246194809616632[351] = 1.0;
   out_4329246194809616632[352] = 0;
   out_4329246194809616632[353] = 0;
   out_4329246194809616632[354] = 0;
   out_4329246194809616632[355] = 0;
   out_4329246194809616632[356] = 0;
   out_4329246194809616632[357] = 0;
   out_4329246194809616632[358] = 0;
   out_4329246194809616632[359] = 0;
   out_4329246194809616632[360] = 0;
   out_4329246194809616632[361] = 0;
   out_4329246194809616632[362] = 0;
   out_4329246194809616632[363] = 0;
   out_4329246194809616632[364] = 0;
   out_4329246194809616632[365] = 0;
   out_4329246194809616632[366] = 0;
   out_4329246194809616632[367] = 0;
   out_4329246194809616632[368] = 0;
   out_4329246194809616632[369] = 0;
   out_4329246194809616632[370] = 0;
   out_4329246194809616632[371] = 0;
   out_4329246194809616632[372] = 0;
   out_4329246194809616632[373] = 1.0;
   out_4329246194809616632[374] = 0;
   out_4329246194809616632[375] = 0;
   out_4329246194809616632[376] = 0;
   out_4329246194809616632[377] = 0;
   out_4329246194809616632[378] = 0;
   out_4329246194809616632[379] = 0;
   out_4329246194809616632[380] = 0;
   out_4329246194809616632[381] = 0;
   out_4329246194809616632[382] = 0;
   out_4329246194809616632[383] = 0;
   out_4329246194809616632[384] = 0;
   out_4329246194809616632[385] = 0;
   out_4329246194809616632[386] = 0;
   out_4329246194809616632[387] = 0;
   out_4329246194809616632[388] = 0;
   out_4329246194809616632[389] = 0;
   out_4329246194809616632[390] = 0;
   out_4329246194809616632[391] = 0;
   out_4329246194809616632[392] = 0;
   out_4329246194809616632[393] = 0;
   out_4329246194809616632[394] = 0;
   out_4329246194809616632[395] = 1.0;
   out_4329246194809616632[396] = 0;
   out_4329246194809616632[397] = 0;
   out_4329246194809616632[398] = 0;
   out_4329246194809616632[399] = 0;
   out_4329246194809616632[400] = 0;
   out_4329246194809616632[401] = 0;
   out_4329246194809616632[402] = 0;
   out_4329246194809616632[403] = 0;
   out_4329246194809616632[404] = 0;
   out_4329246194809616632[405] = 0;
   out_4329246194809616632[406] = 0;
   out_4329246194809616632[407] = 0;
   out_4329246194809616632[408] = 0;
   out_4329246194809616632[409] = 0;
   out_4329246194809616632[410] = 0;
   out_4329246194809616632[411] = 0;
   out_4329246194809616632[412] = 0;
   out_4329246194809616632[413] = 0;
   out_4329246194809616632[414] = 0;
   out_4329246194809616632[415] = 0;
   out_4329246194809616632[416] = 0;
   out_4329246194809616632[417] = 1.0;
   out_4329246194809616632[418] = 0;
   out_4329246194809616632[419] = 0;
   out_4329246194809616632[420] = 0;
   out_4329246194809616632[421] = 0;
   out_4329246194809616632[422] = 0;
   out_4329246194809616632[423] = 0;
   out_4329246194809616632[424] = 0;
   out_4329246194809616632[425] = 0;
   out_4329246194809616632[426] = 0;
   out_4329246194809616632[427] = 0;
   out_4329246194809616632[428] = 0;
   out_4329246194809616632[429] = 0;
   out_4329246194809616632[430] = 0;
   out_4329246194809616632[431] = 0;
   out_4329246194809616632[432] = 0;
   out_4329246194809616632[433] = 0;
   out_4329246194809616632[434] = 0;
   out_4329246194809616632[435] = 0;
   out_4329246194809616632[436] = 0;
   out_4329246194809616632[437] = 0;
   out_4329246194809616632[438] = 0;
   out_4329246194809616632[439] = 1.0;
   out_4329246194809616632[440] = 0;
   out_4329246194809616632[441] = 0;
   out_4329246194809616632[442] = 0;
   out_4329246194809616632[443] = 0;
   out_4329246194809616632[444] = 0;
   out_4329246194809616632[445] = 0;
   out_4329246194809616632[446] = 0;
   out_4329246194809616632[447] = 0;
   out_4329246194809616632[448] = 0;
   out_4329246194809616632[449] = 0;
   out_4329246194809616632[450] = 0;
   out_4329246194809616632[451] = 0;
   out_4329246194809616632[452] = 0;
   out_4329246194809616632[453] = 0;
   out_4329246194809616632[454] = 0;
   out_4329246194809616632[455] = 0;
   out_4329246194809616632[456] = 0;
   out_4329246194809616632[457] = 0;
   out_4329246194809616632[458] = 0;
   out_4329246194809616632[459] = 0;
   out_4329246194809616632[460] = 0;
   out_4329246194809616632[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5992521947480762617) {
   out_5992521947480762617[0] = dt*state[7] + state[0];
   out_5992521947480762617[1] = dt*state[8] + state[1];
   out_5992521947480762617[2] = dt*state[9] + state[2];
   out_5992521947480762617[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5992521947480762617[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5992521947480762617[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5992521947480762617[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5992521947480762617[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5992521947480762617[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5992521947480762617[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5992521947480762617[10] = state[10];
   out_5992521947480762617[11] = state[11];
   out_5992521947480762617[12] = state[12];
   out_5992521947480762617[13] = state[13];
   out_5992521947480762617[14] = state[14];
   out_5992521947480762617[15] = state[15];
   out_5992521947480762617[16] = state[16];
   out_5992521947480762617[17] = state[17];
   out_5992521947480762617[18] = state[18];
   out_5992521947480762617[19] = state[19];
   out_5992521947480762617[20] = state[20];
   out_5992521947480762617[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4649644131871762932) {
   out_4649644131871762932[0] = 1;
   out_4649644131871762932[1] = 0;
   out_4649644131871762932[2] = 0;
   out_4649644131871762932[3] = 0;
   out_4649644131871762932[4] = 0;
   out_4649644131871762932[5] = 0;
   out_4649644131871762932[6] = dt;
   out_4649644131871762932[7] = 0;
   out_4649644131871762932[8] = 0;
   out_4649644131871762932[9] = 0;
   out_4649644131871762932[10] = 0;
   out_4649644131871762932[11] = 0;
   out_4649644131871762932[12] = 0;
   out_4649644131871762932[13] = 0;
   out_4649644131871762932[14] = 0;
   out_4649644131871762932[15] = 0;
   out_4649644131871762932[16] = 0;
   out_4649644131871762932[17] = 0;
   out_4649644131871762932[18] = 0;
   out_4649644131871762932[19] = 0;
   out_4649644131871762932[20] = 0;
   out_4649644131871762932[21] = 0;
   out_4649644131871762932[22] = 1;
   out_4649644131871762932[23] = 0;
   out_4649644131871762932[24] = 0;
   out_4649644131871762932[25] = 0;
   out_4649644131871762932[26] = 0;
   out_4649644131871762932[27] = 0;
   out_4649644131871762932[28] = dt;
   out_4649644131871762932[29] = 0;
   out_4649644131871762932[30] = 0;
   out_4649644131871762932[31] = 0;
   out_4649644131871762932[32] = 0;
   out_4649644131871762932[33] = 0;
   out_4649644131871762932[34] = 0;
   out_4649644131871762932[35] = 0;
   out_4649644131871762932[36] = 0;
   out_4649644131871762932[37] = 0;
   out_4649644131871762932[38] = 0;
   out_4649644131871762932[39] = 0;
   out_4649644131871762932[40] = 0;
   out_4649644131871762932[41] = 0;
   out_4649644131871762932[42] = 0;
   out_4649644131871762932[43] = 0;
   out_4649644131871762932[44] = 1;
   out_4649644131871762932[45] = 0;
   out_4649644131871762932[46] = 0;
   out_4649644131871762932[47] = 0;
   out_4649644131871762932[48] = 0;
   out_4649644131871762932[49] = 0;
   out_4649644131871762932[50] = dt;
   out_4649644131871762932[51] = 0;
   out_4649644131871762932[52] = 0;
   out_4649644131871762932[53] = 0;
   out_4649644131871762932[54] = 0;
   out_4649644131871762932[55] = 0;
   out_4649644131871762932[56] = 0;
   out_4649644131871762932[57] = 0;
   out_4649644131871762932[58] = 0;
   out_4649644131871762932[59] = 0;
   out_4649644131871762932[60] = 0;
   out_4649644131871762932[61] = 0;
   out_4649644131871762932[62] = 0;
   out_4649644131871762932[63] = 0;
   out_4649644131871762932[64] = 0;
   out_4649644131871762932[65] = 0;
   out_4649644131871762932[66] = 1;
   out_4649644131871762932[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4649644131871762932[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4649644131871762932[69] = 0;
   out_4649644131871762932[70] = 0;
   out_4649644131871762932[71] = 0;
   out_4649644131871762932[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4649644131871762932[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4649644131871762932[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4649644131871762932[75] = 0;
   out_4649644131871762932[76] = 0;
   out_4649644131871762932[77] = 0;
   out_4649644131871762932[78] = 0;
   out_4649644131871762932[79] = 0;
   out_4649644131871762932[80] = 0;
   out_4649644131871762932[81] = 0;
   out_4649644131871762932[82] = 0;
   out_4649644131871762932[83] = 0;
   out_4649644131871762932[84] = 0;
   out_4649644131871762932[85] = 0;
   out_4649644131871762932[86] = 0;
   out_4649644131871762932[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4649644131871762932[88] = 1;
   out_4649644131871762932[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4649644131871762932[90] = 0;
   out_4649644131871762932[91] = 0;
   out_4649644131871762932[92] = 0;
   out_4649644131871762932[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4649644131871762932[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4649644131871762932[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4649644131871762932[96] = 0;
   out_4649644131871762932[97] = 0;
   out_4649644131871762932[98] = 0;
   out_4649644131871762932[99] = 0;
   out_4649644131871762932[100] = 0;
   out_4649644131871762932[101] = 0;
   out_4649644131871762932[102] = 0;
   out_4649644131871762932[103] = 0;
   out_4649644131871762932[104] = 0;
   out_4649644131871762932[105] = 0;
   out_4649644131871762932[106] = 0;
   out_4649644131871762932[107] = 0;
   out_4649644131871762932[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4649644131871762932[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4649644131871762932[110] = 1;
   out_4649644131871762932[111] = 0;
   out_4649644131871762932[112] = 0;
   out_4649644131871762932[113] = 0;
   out_4649644131871762932[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4649644131871762932[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4649644131871762932[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4649644131871762932[117] = 0;
   out_4649644131871762932[118] = 0;
   out_4649644131871762932[119] = 0;
   out_4649644131871762932[120] = 0;
   out_4649644131871762932[121] = 0;
   out_4649644131871762932[122] = 0;
   out_4649644131871762932[123] = 0;
   out_4649644131871762932[124] = 0;
   out_4649644131871762932[125] = 0;
   out_4649644131871762932[126] = 0;
   out_4649644131871762932[127] = 0;
   out_4649644131871762932[128] = 0;
   out_4649644131871762932[129] = 0;
   out_4649644131871762932[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4649644131871762932[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4649644131871762932[132] = 1;
   out_4649644131871762932[133] = 0;
   out_4649644131871762932[134] = 0;
   out_4649644131871762932[135] = 0;
   out_4649644131871762932[136] = 0;
   out_4649644131871762932[137] = 0;
   out_4649644131871762932[138] = 0;
   out_4649644131871762932[139] = 0;
   out_4649644131871762932[140] = 0;
   out_4649644131871762932[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4649644131871762932[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4649644131871762932[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4649644131871762932[144] = 0;
   out_4649644131871762932[145] = 0;
   out_4649644131871762932[146] = 0;
   out_4649644131871762932[147] = 0;
   out_4649644131871762932[148] = 0;
   out_4649644131871762932[149] = 0;
   out_4649644131871762932[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4649644131871762932[151] = 0;
   out_4649644131871762932[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4649644131871762932[153] = 0;
   out_4649644131871762932[154] = 1;
   out_4649644131871762932[155] = 0;
   out_4649644131871762932[156] = 0;
   out_4649644131871762932[157] = 0;
   out_4649644131871762932[158] = 0;
   out_4649644131871762932[159] = 0;
   out_4649644131871762932[160] = 0;
   out_4649644131871762932[161] = 0;
   out_4649644131871762932[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4649644131871762932[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4649644131871762932[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4649644131871762932[165] = 0;
   out_4649644131871762932[166] = 0;
   out_4649644131871762932[167] = 0;
   out_4649644131871762932[168] = 0;
   out_4649644131871762932[169] = 0;
   out_4649644131871762932[170] = 0;
   out_4649644131871762932[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4649644131871762932[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4649644131871762932[173] = 0;
   out_4649644131871762932[174] = 0;
   out_4649644131871762932[175] = 0;
   out_4649644131871762932[176] = 1;
   out_4649644131871762932[177] = 0;
   out_4649644131871762932[178] = 0;
   out_4649644131871762932[179] = 0;
   out_4649644131871762932[180] = 0;
   out_4649644131871762932[181] = 0;
   out_4649644131871762932[182] = 0;
   out_4649644131871762932[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4649644131871762932[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4649644131871762932[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4649644131871762932[186] = 0;
   out_4649644131871762932[187] = 0;
   out_4649644131871762932[188] = 0;
   out_4649644131871762932[189] = 0;
   out_4649644131871762932[190] = 0;
   out_4649644131871762932[191] = 0;
   out_4649644131871762932[192] = 0;
   out_4649644131871762932[193] = 0;
   out_4649644131871762932[194] = 0;
   out_4649644131871762932[195] = 0;
   out_4649644131871762932[196] = 0;
   out_4649644131871762932[197] = 0;
   out_4649644131871762932[198] = 1;
   out_4649644131871762932[199] = 0;
   out_4649644131871762932[200] = 0;
   out_4649644131871762932[201] = 0;
   out_4649644131871762932[202] = 0;
   out_4649644131871762932[203] = 0;
   out_4649644131871762932[204] = 0;
   out_4649644131871762932[205] = 0;
   out_4649644131871762932[206] = 0;
   out_4649644131871762932[207] = 0;
   out_4649644131871762932[208] = 0;
   out_4649644131871762932[209] = 0;
   out_4649644131871762932[210] = 0;
   out_4649644131871762932[211] = 0;
   out_4649644131871762932[212] = 0;
   out_4649644131871762932[213] = 0;
   out_4649644131871762932[214] = 0;
   out_4649644131871762932[215] = 0;
   out_4649644131871762932[216] = 0;
   out_4649644131871762932[217] = 0;
   out_4649644131871762932[218] = 0;
   out_4649644131871762932[219] = 0;
   out_4649644131871762932[220] = 1;
   out_4649644131871762932[221] = 0;
   out_4649644131871762932[222] = 0;
   out_4649644131871762932[223] = 0;
   out_4649644131871762932[224] = 0;
   out_4649644131871762932[225] = 0;
   out_4649644131871762932[226] = 0;
   out_4649644131871762932[227] = 0;
   out_4649644131871762932[228] = 0;
   out_4649644131871762932[229] = 0;
   out_4649644131871762932[230] = 0;
   out_4649644131871762932[231] = 0;
   out_4649644131871762932[232] = 0;
   out_4649644131871762932[233] = 0;
   out_4649644131871762932[234] = 0;
   out_4649644131871762932[235] = 0;
   out_4649644131871762932[236] = 0;
   out_4649644131871762932[237] = 0;
   out_4649644131871762932[238] = 0;
   out_4649644131871762932[239] = 0;
   out_4649644131871762932[240] = 0;
   out_4649644131871762932[241] = 0;
   out_4649644131871762932[242] = 1;
   out_4649644131871762932[243] = 0;
   out_4649644131871762932[244] = 0;
   out_4649644131871762932[245] = 0;
   out_4649644131871762932[246] = 0;
   out_4649644131871762932[247] = 0;
   out_4649644131871762932[248] = 0;
   out_4649644131871762932[249] = 0;
   out_4649644131871762932[250] = 0;
   out_4649644131871762932[251] = 0;
   out_4649644131871762932[252] = 0;
   out_4649644131871762932[253] = 0;
   out_4649644131871762932[254] = 0;
   out_4649644131871762932[255] = 0;
   out_4649644131871762932[256] = 0;
   out_4649644131871762932[257] = 0;
   out_4649644131871762932[258] = 0;
   out_4649644131871762932[259] = 0;
   out_4649644131871762932[260] = 0;
   out_4649644131871762932[261] = 0;
   out_4649644131871762932[262] = 0;
   out_4649644131871762932[263] = 0;
   out_4649644131871762932[264] = 1;
   out_4649644131871762932[265] = 0;
   out_4649644131871762932[266] = 0;
   out_4649644131871762932[267] = 0;
   out_4649644131871762932[268] = 0;
   out_4649644131871762932[269] = 0;
   out_4649644131871762932[270] = 0;
   out_4649644131871762932[271] = 0;
   out_4649644131871762932[272] = 0;
   out_4649644131871762932[273] = 0;
   out_4649644131871762932[274] = 0;
   out_4649644131871762932[275] = 0;
   out_4649644131871762932[276] = 0;
   out_4649644131871762932[277] = 0;
   out_4649644131871762932[278] = 0;
   out_4649644131871762932[279] = 0;
   out_4649644131871762932[280] = 0;
   out_4649644131871762932[281] = 0;
   out_4649644131871762932[282] = 0;
   out_4649644131871762932[283] = 0;
   out_4649644131871762932[284] = 0;
   out_4649644131871762932[285] = 0;
   out_4649644131871762932[286] = 1;
   out_4649644131871762932[287] = 0;
   out_4649644131871762932[288] = 0;
   out_4649644131871762932[289] = 0;
   out_4649644131871762932[290] = 0;
   out_4649644131871762932[291] = 0;
   out_4649644131871762932[292] = 0;
   out_4649644131871762932[293] = 0;
   out_4649644131871762932[294] = 0;
   out_4649644131871762932[295] = 0;
   out_4649644131871762932[296] = 0;
   out_4649644131871762932[297] = 0;
   out_4649644131871762932[298] = 0;
   out_4649644131871762932[299] = 0;
   out_4649644131871762932[300] = 0;
   out_4649644131871762932[301] = 0;
   out_4649644131871762932[302] = 0;
   out_4649644131871762932[303] = 0;
   out_4649644131871762932[304] = 0;
   out_4649644131871762932[305] = 0;
   out_4649644131871762932[306] = 0;
   out_4649644131871762932[307] = 0;
   out_4649644131871762932[308] = 1;
   out_4649644131871762932[309] = 0;
   out_4649644131871762932[310] = 0;
   out_4649644131871762932[311] = 0;
   out_4649644131871762932[312] = 0;
   out_4649644131871762932[313] = 0;
   out_4649644131871762932[314] = 0;
   out_4649644131871762932[315] = 0;
   out_4649644131871762932[316] = 0;
   out_4649644131871762932[317] = 0;
   out_4649644131871762932[318] = 0;
   out_4649644131871762932[319] = 0;
   out_4649644131871762932[320] = 0;
   out_4649644131871762932[321] = 0;
   out_4649644131871762932[322] = 0;
   out_4649644131871762932[323] = 0;
   out_4649644131871762932[324] = 0;
   out_4649644131871762932[325] = 0;
   out_4649644131871762932[326] = 0;
   out_4649644131871762932[327] = 0;
   out_4649644131871762932[328] = 0;
   out_4649644131871762932[329] = 0;
   out_4649644131871762932[330] = 1;
   out_4649644131871762932[331] = 0;
   out_4649644131871762932[332] = 0;
   out_4649644131871762932[333] = 0;
   out_4649644131871762932[334] = 0;
   out_4649644131871762932[335] = 0;
   out_4649644131871762932[336] = 0;
   out_4649644131871762932[337] = 0;
   out_4649644131871762932[338] = 0;
   out_4649644131871762932[339] = 0;
   out_4649644131871762932[340] = 0;
   out_4649644131871762932[341] = 0;
   out_4649644131871762932[342] = 0;
   out_4649644131871762932[343] = 0;
   out_4649644131871762932[344] = 0;
   out_4649644131871762932[345] = 0;
   out_4649644131871762932[346] = 0;
   out_4649644131871762932[347] = 0;
   out_4649644131871762932[348] = 0;
   out_4649644131871762932[349] = 0;
   out_4649644131871762932[350] = 0;
   out_4649644131871762932[351] = 0;
   out_4649644131871762932[352] = 1;
   out_4649644131871762932[353] = 0;
   out_4649644131871762932[354] = 0;
   out_4649644131871762932[355] = 0;
   out_4649644131871762932[356] = 0;
   out_4649644131871762932[357] = 0;
   out_4649644131871762932[358] = 0;
   out_4649644131871762932[359] = 0;
   out_4649644131871762932[360] = 0;
   out_4649644131871762932[361] = 0;
   out_4649644131871762932[362] = 0;
   out_4649644131871762932[363] = 0;
   out_4649644131871762932[364] = 0;
   out_4649644131871762932[365] = 0;
   out_4649644131871762932[366] = 0;
   out_4649644131871762932[367] = 0;
   out_4649644131871762932[368] = 0;
   out_4649644131871762932[369] = 0;
   out_4649644131871762932[370] = 0;
   out_4649644131871762932[371] = 0;
   out_4649644131871762932[372] = 0;
   out_4649644131871762932[373] = 0;
   out_4649644131871762932[374] = 1;
   out_4649644131871762932[375] = 0;
   out_4649644131871762932[376] = 0;
   out_4649644131871762932[377] = 0;
   out_4649644131871762932[378] = 0;
   out_4649644131871762932[379] = 0;
   out_4649644131871762932[380] = 0;
   out_4649644131871762932[381] = 0;
   out_4649644131871762932[382] = 0;
   out_4649644131871762932[383] = 0;
   out_4649644131871762932[384] = 0;
   out_4649644131871762932[385] = 0;
   out_4649644131871762932[386] = 0;
   out_4649644131871762932[387] = 0;
   out_4649644131871762932[388] = 0;
   out_4649644131871762932[389] = 0;
   out_4649644131871762932[390] = 0;
   out_4649644131871762932[391] = 0;
   out_4649644131871762932[392] = 0;
   out_4649644131871762932[393] = 0;
   out_4649644131871762932[394] = 0;
   out_4649644131871762932[395] = 0;
   out_4649644131871762932[396] = 1;
   out_4649644131871762932[397] = 0;
   out_4649644131871762932[398] = 0;
   out_4649644131871762932[399] = 0;
   out_4649644131871762932[400] = 0;
   out_4649644131871762932[401] = 0;
   out_4649644131871762932[402] = 0;
   out_4649644131871762932[403] = 0;
   out_4649644131871762932[404] = 0;
   out_4649644131871762932[405] = 0;
   out_4649644131871762932[406] = 0;
   out_4649644131871762932[407] = 0;
   out_4649644131871762932[408] = 0;
   out_4649644131871762932[409] = 0;
   out_4649644131871762932[410] = 0;
   out_4649644131871762932[411] = 0;
   out_4649644131871762932[412] = 0;
   out_4649644131871762932[413] = 0;
   out_4649644131871762932[414] = 0;
   out_4649644131871762932[415] = 0;
   out_4649644131871762932[416] = 0;
   out_4649644131871762932[417] = 0;
   out_4649644131871762932[418] = 1;
   out_4649644131871762932[419] = 0;
   out_4649644131871762932[420] = 0;
   out_4649644131871762932[421] = 0;
   out_4649644131871762932[422] = 0;
   out_4649644131871762932[423] = 0;
   out_4649644131871762932[424] = 0;
   out_4649644131871762932[425] = 0;
   out_4649644131871762932[426] = 0;
   out_4649644131871762932[427] = 0;
   out_4649644131871762932[428] = 0;
   out_4649644131871762932[429] = 0;
   out_4649644131871762932[430] = 0;
   out_4649644131871762932[431] = 0;
   out_4649644131871762932[432] = 0;
   out_4649644131871762932[433] = 0;
   out_4649644131871762932[434] = 0;
   out_4649644131871762932[435] = 0;
   out_4649644131871762932[436] = 0;
   out_4649644131871762932[437] = 0;
   out_4649644131871762932[438] = 0;
   out_4649644131871762932[439] = 0;
   out_4649644131871762932[440] = 1;
}
void h_4(double *state, double *unused, double *out_6124528919913981966) {
   out_6124528919913981966[0] = state[10] + state[13];
   out_6124528919913981966[1] = state[11] + state[14];
   out_6124528919913981966[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7267858052716951485) {
   out_7267858052716951485[0] = 0;
   out_7267858052716951485[1] = 0;
   out_7267858052716951485[2] = 0;
   out_7267858052716951485[3] = 0;
   out_7267858052716951485[4] = 0;
   out_7267858052716951485[5] = 0;
   out_7267858052716951485[6] = 0;
   out_7267858052716951485[7] = 0;
   out_7267858052716951485[8] = 0;
   out_7267858052716951485[9] = 0;
   out_7267858052716951485[10] = 1;
   out_7267858052716951485[11] = 0;
   out_7267858052716951485[12] = 0;
   out_7267858052716951485[13] = 1;
   out_7267858052716951485[14] = 0;
   out_7267858052716951485[15] = 0;
   out_7267858052716951485[16] = 0;
   out_7267858052716951485[17] = 0;
   out_7267858052716951485[18] = 0;
   out_7267858052716951485[19] = 0;
   out_7267858052716951485[20] = 0;
   out_7267858052716951485[21] = 0;
   out_7267858052716951485[22] = 0;
   out_7267858052716951485[23] = 0;
   out_7267858052716951485[24] = 0;
   out_7267858052716951485[25] = 0;
   out_7267858052716951485[26] = 0;
   out_7267858052716951485[27] = 0;
   out_7267858052716951485[28] = 0;
   out_7267858052716951485[29] = 0;
   out_7267858052716951485[30] = 0;
   out_7267858052716951485[31] = 0;
   out_7267858052716951485[32] = 0;
   out_7267858052716951485[33] = 1;
   out_7267858052716951485[34] = 0;
   out_7267858052716951485[35] = 0;
   out_7267858052716951485[36] = 1;
   out_7267858052716951485[37] = 0;
   out_7267858052716951485[38] = 0;
   out_7267858052716951485[39] = 0;
   out_7267858052716951485[40] = 0;
   out_7267858052716951485[41] = 0;
   out_7267858052716951485[42] = 0;
   out_7267858052716951485[43] = 0;
   out_7267858052716951485[44] = 0;
   out_7267858052716951485[45] = 0;
   out_7267858052716951485[46] = 0;
   out_7267858052716951485[47] = 0;
   out_7267858052716951485[48] = 0;
   out_7267858052716951485[49] = 0;
   out_7267858052716951485[50] = 0;
   out_7267858052716951485[51] = 0;
   out_7267858052716951485[52] = 0;
   out_7267858052716951485[53] = 0;
   out_7267858052716951485[54] = 0;
   out_7267858052716951485[55] = 0;
   out_7267858052716951485[56] = 1;
   out_7267858052716951485[57] = 0;
   out_7267858052716951485[58] = 0;
   out_7267858052716951485[59] = 1;
   out_7267858052716951485[60] = 0;
   out_7267858052716951485[61] = 0;
   out_7267858052716951485[62] = 0;
   out_7267858052716951485[63] = 0;
   out_7267858052716951485[64] = 0;
   out_7267858052716951485[65] = 0;
}
void h_9(double *state, double *unused, double *out_2464761248593869412) {
   out_2464761248593869412[0] = state[10];
   out_2464761248593869412[1] = state[11];
   out_2464761248593869412[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3891667085728152661) {
   out_3891667085728152661[0] = 0;
   out_3891667085728152661[1] = 0;
   out_3891667085728152661[2] = 0;
   out_3891667085728152661[3] = 0;
   out_3891667085728152661[4] = 0;
   out_3891667085728152661[5] = 0;
   out_3891667085728152661[6] = 0;
   out_3891667085728152661[7] = 0;
   out_3891667085728152661[8] = 0;
   out_3891667085728152661[9] = 0;
   out_3891667085728152661[10] = 1;
   out_3891667085728152661[11] = 0;
   out_3891667085728152661[12] = 0;
   out_3891667085728152661[13] = 0;
   out_3891667085728152661[14] = 0;
   out_3891667085728152661[15] = 0;
   out_3891667085728152661[16] = 0;
   out_3891667085728152661[17] = 0;
   out_3891667085728152661[18] = 0;
   out_3891667085728152661[19] = 0;
   out_3891667085728152661[20] = 0;
   out_3891667085728152661[21] = 0;
   out_3891667085728152661[22] = 0;
   out_3891667085728152661[23] = 0;
   out_3891667085728152661[24] = 0;
   out_3891667085728152661[25] = 0;
   out_3891667085728152661[26] = 0;
   out_3891667085728152661[27] = 0;
   out_3891667085728152661[28] = 0;
   out_3891667085728152661[29] = 0;
   out_3891667085728152661[30] = 0;
   out_3891667085728152661[31] = 0;
   out_3891667085728152661[32] = 0;
   out_3891667085728152661[33] = 1;
   out_3891667085728152661[34] = 0;
   out_3891667085728152661[35] = 0;
   out_3891667085728152661[36] = 0;
   out_3891667085728152661[37] = 0;
   out_3891667085728152661[38] = 0;
   out_3891667085728152661[39] = 0;
   out_3891667085728152661[40] = 0;
   out_3891667085728152661[41] = 0;
   out_3891667085728152661[42] = 0;
   out_3891667085728152661[43] = 0;
   out_3891667085728152661[44] = 0;
   out_3891667085728152661[45] = 0;
   out_3891667085728152661[46] = 0;
   out_3891667085728152661[47] = 0;
   out_3891667085728152661[48] = 0;
   out_3891667085728152661[49] = 0;
   out_3891667085728152661[50] = 0;
   out_3891667085728152661[51] = 0;
   out_3891667085728152661[52] = 0;
   out_3891667085728152661[53] = 0;
   out_3891667085728152661[54] = 0;
   out_3891667085728152661[55] = 0;
   out_3891667085728152661[56] = 1;
   out_3891667085728152661[57] = 0;
   out_3891667085728152661[58] = 0;
   out_3891667085728152661[59] = 0;
   out_3891667085728152661[60] = 0;
   out_3891667085728152661[61] = 0;
   out_3891667085728152661[62] = 0;
   out_3891667085728152661[63] = 0;
   out_3891667085728152661[64] = 0;
   out_3891667085728152661[65] = 0;
}
void h_10(double *state, double *unused, double *out_7625164934370633875) {
   out_7625164934370633875[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7625164934370633875[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7625164934370633875[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4274723642592768505) {
   out_4274723642592768505[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4274723642592768505[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4274723642592768505[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4274723642592768505[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4274723642592768505[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4274723642592768505[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4274723642592768505[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4274723642592768505[7] = 0;
   out_4274723642592768505[8] = 0;
   out_4274723642592768505[9] = 0;
   out_4274723642592768505[10] = 0;
   out_4274723642592768505[11] = 0;
   out_4274723642592768505[12] = 0;
   out_4274723642592768505[13] = 0;
   out_4274723642592768505[14] = 0;
   out_4274723642592768505[15] = 0;
   out_4274723642592768505[16] = 1;
   out_4274723642592768505[17] = 0;
   out_4274723642592768505[18] = 0;
   out_4274723642592768505[19] = 1;
   out_4274723642592768505[20] = 0;
   out_4274723642592768505[21] = 0;
   out_4274723642592768505[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4274723642592768505[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4274723642592768505[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4274723642592768505[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4274723642592768505[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4274723642592768505[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4274723642592768505[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4274723642592768505[29] = 0;
   out_4274723642592768505[30] = 0;
   out_4274723642592768505[31] = 0;
   out_4274723642592768505[32] = 0;
   out_4274723642592768505[33] = 0;
   out_4274723642592768505[34] = 0;
   out_4274723642592768505[35] = 0;
   out_4274723642592768505[36] = 0;
   out_4274723642592768505[37] = 0;
   out_4274723642592768505[38] = 0;
   out_4274723642592768505[39] = 1;
   out_4274723642592768505[40] = 0;
   out_4274723642592768505[41] = 0;
   out_4274723642592768505[42] = 1;
   out_4274723642592768505[43] = 0;
   out_4274723642592768505[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4274723642592768505[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4274723642592768505[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4274723642592768505[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4274723642592768505[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4274723642592768505[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4274723642592768505[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4274723642592768505[51] = 0;
   out_4274723642592768505[52] = 0;
   out_4274723642592768505[53] = 0;
   out_4274723642592768505[54] = 0;
   out_4274723642592768505[55] = 0;
   out_4274723642592768505[56] = 0;
   out_4274723642592768505[57] = 0;
   out_4274723642592768505[58] = 0;
   out_4274723642592768505[59] = 0;
   out_4274723642592768505[60] = 0;
   out_4274723642592768505[61] = 0;
   out_4274723642592768505[62] = 1;
   out_4274723642592768505[63] = 0;
   out_4274723642592768505[64] = 0;
   out_4274723642592768505[65] = 1;
}
void h_12(double *state, double *unused, double *out_3240055958119241978) {
   out_3240055958119241978[0] = state[0];
   out_3240055958119241978[1] = state[1];
   out_3240055958119241978[2] = state[2];
}
void H_12(double *state, double *unused, double *out_886599675674218489) {
   out_886599675674218489[0] = 1;
   out_886599675674218489[1] = 0;
   out_886599675674218489[2] = 0;
   out_886599675674218489[3] = 0;
   out_886599675674218489[4] = 0;
   out_886599675674218489[5] = 0;
   out_886599675674218489[6] = 0;
   out_886599675674218489[7] = 0;
   out_886599675674218489[8] = 0;
   out_886599675674218489[9] = 0;
   out_886599675674218489[10] = 0;
   out_886599675674218489[11] = 0;
   out_886599675674218489[12] = 0;
   out_886599675674218489[13] = 0;
   out_886599675674218489[14] = 0;
   out_886599675674218489[15] = 0;
   out_886599675674218489[16] = 0;
   out_886599675674218489[17] = 0;
   out_886599675674218489[18] = 0;
   out_886599675674218489[19] = 0;
   out_886599675674218489[20] = 0;
   out_886599675674218489[21] = 0;
   out_886599675674218489[22] = 0;
   out_886599675674218489[23] = 1;
   out_886599675674218489[24] = 0;
   out_886599675674218489[25] = 0;
   out_886599675674218489[26] = 0;
   out_886599675674218489[27] = 0;
   out_886599675674218489[28] = 0;
   out_886599675674218489[29] = 0;
   out_886599675674218489[30] = 0;
   out_886599675674218489[31] = 0;
   out_886599675674218489[32] = 0;
   out_886599675674218489[33] = 0;
   out_886599675674218489[34] = 0;
   out_886599675674218489[35] = 0;
   out_886599675674218489[36] = 0;
   out_886599675674218489[37] = 0;
   out_886599675674218489[38] = 0;
   out_886599675674218489[39] = 0;
   out_886599675674218489[40] = 0;
   out_886599675674218489[41] = 0;
   out_886599675674218489[42] = 0;
   out_886599675674218489[43] = 0;
   out_886599675674218489[44] = 0;
   out_886599675674218489[45] = 0;
   out_886599675674218489[46] = 1;
   out_886599675674218489[47] = 0;
   out_886599675674218489[48] = 0;
   out_886599675674218489[49] = 0;
   out_886599675674218489[50] = 0;
   out_886599675674218489[51] = 0;
   out_886599675674218489[52] = 0;
   out_886599675674218489[53] = 0;
   out_886599675674218489[54] = 0;
   out_886599675674218489[55] = 0;
   out_886599675674218489[56] = 0;
   out_886599675674218489[57] = 0;
   out_886599675674218489[58] = 0;
   out_886599675674218489[59] = 0;
   out_886599675674218489[60] = 0;
   out_886599675674218489[61] = 0;
   out_886599675674218489[62] = 0;
   out_886599675674218489[63] = 0;
   out_886599675674218489[64] = 0;
   out_886599675674218489[65] = 0;
}
void h_35(double *state, double *unused, double *out_6730900078470589679) {
   out_6730900078470589679[0] = state[7];
   out_6730900078470589679[1] = state[8];
   out_6730900078470589679[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3413866580635624627) {
   out_3413866580635624627[0] = 0;
   out_3413866580635624627[1] = 0;
   out_3413866580635624627[2] = 0;
   out_3413866580635624627[3] = 0;
   out_3413866580635624627[4] = 0;
   out_3413866580635624627[5] = 0;
   out_3413866580635624627[6] = 0;
   out_3413866580635624627[7] = 1;
   out_3413866580635624627[8] = 0;
   out_3413866580635624627[9] = 0;
   out_3413866580635624627[10] = 0;
   out_3413866580635624627[11] = 0;
   out_3413866580635624627[12] = 0;
   out_3413866580635624627[13] = 0;
   out_3413866580635624627[14] = 0;
   out_3413866580635624627[15] = 0;
   out_3413866580635624627[16] = 0;
   out_3413866580635624627[17] = 0;
   out_3413866580635624627[18] = 0;
   out_3413866580635624627[19] = 0;
   out_3413866580635624627[20] = 0;
   out_3413866580635624627[21] = 0;
   out_3413866580635624627[22] = 0;
   out_3413866580635624627[23] = 0;
   out_3413866580635624627[24] = 0;
   out_3413866580635624627[25] = 0;
   out_3413866580635624627[26] = 0;
   out_3413866580635624627[27] = 0;
   out_3413866580635624627[28] = 0;
   out_3413866580635624627[29] = 0;
   out_3413866580635624627[30] = 1;
   out_3413866580635624627[31] = 0;
   out_3413866580635624627[32] = 0;
   out_3413866580635624627[33] = 0;
   out_3413866580635624627[34] = 0;
   out_3413866580635624627[35] = 0;
   out_3413866580635624627[36] = 0;
   out_3413866580635624627[37] = 0;
   out_3413866580635624627[38] = 0;
   out_3413866580635624627[39] = 0;
   out_3413866580635624627[40] = 0;
   out_3413866580635624627[41] = 0;
   out_3413866580635624627[42] = 0;
   out_3413866580635624627[43] = 0;
   out_3413866580635624627[44] = 0;
   out_3413866580635624627[45] = 0;
   out_3413866580635624627[46] = 0;
   out_3413866580635624627[47] = 0;
   out_3413866580635624627[48] = 0;
   out_3413866580635624627[49] = 0;
   out_3413866580635624627[50] = 0;
   out_3413866580635624627[51] = 0;
   out_3413866580635624627[52] = 0;
   out_3413866580635624627[53] = 1;
   out_3413866580635624627[54] = 0;
   out_3413866580635624627[55] = 0;
   out_3413866580635624627[56] = 0;
   out_3413866580635624627[57] = 0;
   out_3413866580635624627[58] = 0;
   out_3413866580635624627[59] = 0;
   out_3413866580635624627[60] = 0;
   out_3413866580635624627[61] = 0;
   out_3413866580635624627[62] = 0;
   out_3413866580635624627[63] = 0;
   out_3413866580635624627[64] = 0;
   out_3413866580635624627[65] = 0;
}
void h_32(double *state, double *unused, double *out_1851695392969102110) {
   out_1851695392969102110[0] = state[3];
   out_1851695392969102110[1] = state[4];
   out_1851695392969102110[2] = state[5];
   out_1851695392969102110[3] = state[6];
}
void H_32(double *state, double *unused, double *out_708842067733874690) {
   out_708842067733874690[0] = 0;
   out_708842067733874690[1] = 0;
   out_708842067733874690[2] = 0;
   out_708842067733874690[3] = 1;
   out_708842067733874690[4] = 0;
   out_708842067733874690[5] = 0;
   out_708842067733874690[6] = 0;
   out_708842067733874690[7] = 0;
   out_708842067733874690[8] = 0;
   out_708842067733874690[9] = 0;
   out_708842067733874690[10] = 0;
   out_708842067733874690[11] = 0;
   out_708842067733874690[12] = 0;
   out_708842067733874690[13] = 0;
   out_708842067733874690[14] = 0;
   out_708842067733874690[15] = 0;
   out_708842067733874690[16] = 0;
   out_708842067733874690[17] = 0;
   out_708842067733874690[18] = 0;
   out_708842067733874690[19] = 0;
   out_708842067733874690[20] = 0;
   out_708842067733874690[21] = 0;
   out_708842067733874690[22] = 0;
   out_708842067733874690[23] = 0;
   out_708842067733874690[24] = 0;
   out_708842067733874690[25] = 0;
   out_708842067733874690[26] = 1;
   out_708842067733874690[27] = 0;
   out_708842067733874690[28] = 0;
   out_708842067733874690[29] = 0;
   out_708842067733874690[30] = 0;
   out_708842067733874690[31] = 0;
   out_708842067733874690[32] = 0;
   out_708842067733874690[33] = 0;
   out_708842067733874690[34] = 0;
   out_708842067733874690[35] = 0;
   out_708842067733874690[36] = 0;
   out_708842067733874690[37] = 0;
   out_708842067733874690[38] = 0;
   out_708842067733874690[39] = 0;
   out_708842067733874690[40] = 0;
   out_708842067733874690[41] = 0;
   out_708842067733874690[42] = 0;
   out_708842067733874690[43] = 0;
   out_708842067733874690[44] = 0;
   out_708842067733874690[45] = 0;
   out_708842067733874690[46] = 0;
   out_708842067733874690[47] = 0;
   out_708842067733874690[48] = 0;
   out_708842067733874690[49] = 1;
   out_708842067733874690[50] = 0;
   out_708842067733874690[51] = 0;
   out_708842067733874690[52] = 0;
   out_708842067733874690[53] = 0;
   out_708842067733874690[54] = 0;
   out_708842067733874690[55] = 0;
   out_708842067733874690[56] = 0;
   out_708842067733874690[57] = 0;
   out_708842067733874690[58] = 0;
   out_708842067733874690[59] = 0;
   out_708842067733874690[60] = 0;
   out_708842067733874690[61] = 0;
   out_708842067733874690[62] = 0;
   out_708842067733874690[63] = 0;
   out_708842067733874690[64] = 0;
   out_708842067733874690[65] = 0;
   out_708842067733874690[66] = 0;
   out_708842067733874690[67] = 0;
   out_708842067733874690[68] = 0;
   out_708842067733874690[69] = 0;
   out_708842067733874690[70] = 0;
   out_708842067733874690[71] = 0;
   out_708842067733874690[72] = 1;
   out_708842067733874690[73] = 0;
   out_708842067733874690[74] = 0;
   out_708842067733874690[75] = 0;
   out_708842067733874690[76] = 0;
   out_708842067733874690[77] = 0;
   out_708842067733874690[78] = 0;
   out_708842067733874690[79] = 0;
   out_708842067733874690[80] = 0;
   out_708842067733874690[81] = 0;
   out_708842067733874690[82] = 0;
   out_708842067733874690[83] = 0;
   out_708842067733874690[84] = 0;
   out_708842067733874690[85] = 0;
   out_708842067733874690[86] = 0;
   out_708842067733874690[87] = 0;
}
void h_13(double *state, double *unused, double *out_1589135582029383415) {
   out_1589135582029383415[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1589135582029383415[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1589135582029383415[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3334532719869429421) {
   out_3334532719869429421[0] = 0;
   out_3334532719869429421[1] = 0;
   out_3334532719869429421[2] = 0;
   out_3334532719869429421[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3334532719869429421[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3334532719869429421[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3334532719869429421[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3334532719869429421[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3334532719869429421[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3334532719869429421[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3334532719869429421[10] = 0;
   out_3334532719869429421[11] = 0;
   out_3334532719869429421[12] = 0;
   out_3334532719869429421[13] = 0;
   out_3334532719869429421[14] = 0;
   out_3334532719869429421[15] = 0;
   out_3334532719869429421[16] = 0;
   out_3334532719869429421[17] = 0;
   out_3334532719869429421[18] = 0;
   out_3334532719869429421[19] = 0;
   out_3334532719869429421[20] = 0;
   out_3334532719869429421[21] = 0;
   out_3334532719869429421[22] = 0;
   out_3334532719869429421[23] = 0;
   out_3334532719869429421[24] = 0;
   out_3334532719869429421[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3334532719869429421[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3334532719869429421[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3334532719869429421[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3334532719869429421[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3334532719869429421[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3334532719869429421[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3334532719869429421[32] = 0;
   out_3334532719869429421[33] = 0;
   out_3334532719869429421[34] = 0;
   out_3334532719869429421[35] = 0;
   out_3334532719869429421[36] = 0;
   out_3334532719869429421[37] = 0;
   out_3334532719869429421[38] = 0;
   out_3334532719869429421[39] = 0;
   out_3334532719869429421[40] = 0;
   out_3334532719869429421[41] = 0;
   out_3334532719869429421[42] = 0;
   out_3334532719869429421[43] = 0;
   out_3334532719869429421[44] = 0;
   out_3334532719869429421[45] = 0;
   out_3334532719869429421[46] = 0;
   out_3334532719869429421[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3334532719869429421[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3334532719869429421[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3334532719869429421[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3334532719869429421[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3334532719869429421[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3334532719869429421[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3334532719869429421[54] = 0;
   out_3334532719869429421[55] = 0;
   out_3334532719869429421[56] = 0;
   out_3334532719869429421[57] = 0;
   out_3334532719869429421[58] = 0;
   out_3334532719869429421[59] = 0;
   out_3334532719869429421[60] = 0;
   out_3334532719869429421[61] = 0;
   out_3334532719869429421[62] = 0;
   out_3334532719869429421[63] = 0;
   out_3334532719869429421[64] = 0;
   out_3334532719869429421[65] = 0;
}
void h_14(double *state, double *unused, double *out_2464761248593869412) {
   out_2464761248593869412[0] = state[10];
   out_2464761248593869412[1] = state[11];
   out_2464761248593869412[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3891667085728152661) {
   out_3891667085728152661[0] = 0;
   out_3891667085728152661[1] = 0;
   out_3891667085728152661[2] = 0;
   out_3891667085728152661[3] = 0;
   out_3891667085728152661[4] = 0;
   out_3891667085728152661[5] = 0;
   out_3891667085728152661[6] = 0;
   out_3891667085728152661[7] = 0;
   out_3891667085728152661[8] = 0;
   out_3891667085728152661[9] = 0;
   out_3891667085728152661[10] = 1;
   out_3891667085728152661[11] = 0;
   out_3891667085728152661[12] = 0;
   out_3891667085728152661[13] = 0;
   out_3891667085728152661[14] = 0;
   out_3891667085728152661[15] = 0;
   out_3891667085728152661[16] = 0;
   out_3891667085728152661[17] = 0;
   out_3891667085728152661[18] = 0;
   out_3891667085728152661[19] = 0;
   out_3891667085728152661[20] = 0;
   out_3891667085728152661[21] = 0;
   out_3891667085728152661[22] = 0;
   out_3891667085728152661[23] = 0;
   out_3891667085728152661[24] = 0;
   out_3891667085728152661[25] = 0;
   out_3891667085728152661[26] = 0;
   out_3891667085728152661[27] = 0;
   out_3891667085728152661[28] = 0;
   out_3891667085728152661[29] = 0;
   out_3891667085728152661[30] = 0;
   out_3891667085728152661[31] = 0;
   out_3891667085728152661[32] = 0;
   out_3891667085728152661[33] = 1;
   out_3891667085728152661[34] = 0;
   out_3891667085728152661[35] = 0;
   out_3891667085728152661[36] = 0;
   out_3891667085728152661[37] = 0;
   out_3891667085728152661[38] = 0;
   out_3891667085728152661[39] = 0;
   out_3891667085728152661[40] = 0;
   out_3891667085728152661[41] = 0;
   out_3891667085728152661[42] = 0;
   out_3891667085728152661[43] = 0;
   out_3891667085728152661[44] = 0;
   out_3891667085728152661[45] = 0;
   out_3891667085728152661[46] = 0;
   out_3891667085728152661[47] = 0;
   out_3891667085728152661[48] = 0;
   out_3891667085728152661[49] = 0;
   out_3891667085728152661[50] = 0;
   out_3891667085728152661[51] = 0;
   out_3891667085728152661[52] = 0;
   out_3891667085728152661[53] = 0;
   out_3891667085728152661[54] = 0;
   out_3891667085728152661[55] = 0;
   out_3891667085728152661[56] = 1;
   out_3891667085728152661[57] = 0;
   out_3891667085728152661[58] = 0;
   out_3891667085728152661[59] = 0;
   out_3891667085728152661[60] = 0;
   out_3891667085728152661[61] = 0;
   out_3891667085728152661[62] = 0;
   out_3891667085728152661[63] = 0;
   out_3891667085728152661[64] = 0;
   out_3891667085728152661[65] = 0;
}
void h_33(double *state, double *unused, double *out_4825231622042140479) {
   out_4825231622042140479[0] = state[16];
   out_4825231622042140479[1] = state[17];
   out_4825231622042140479[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6782719712638089802) {
   out_6782719712638089802[0] = 0;
   out_6782719712638089802[1] = 0;
   out_6782719712638089802[2] = 0;
   out_6782719712638089802[3] = 0;
   out_6782719712638089802[4] = 0;
   out_6782719712638089802[5] = 0;
   out_6782719712638089802[6] = 0;
   out_6782719712638089802[7] = 0;
   out_6782719712638089802[8] = 0;
   out_6782719712638089802[9] = 0;
   out_6782719712638089802[10] = 0;
   out_6782719712638089802[11] = 0;
   out_6782719712638089802[12] = 0;
   out_6782719712638089802[13] = 0;
   out_6782719712638089802[14] = 0;
   out_6782719712638089802[15] = 0;
   out_6782719712638089802[16] = 1;
   out_6782719712638089802[17] = 0;
   out_6782719712638089802[18] = 0;
   out_6782719712638089802[19] = 0;
   out_6782719712638089802[20] = 0;
   out_6782719712638089802[21] = 0;
   out_6782719712638089802[22] = 0;
   out_6782719712638089802[23] = 0;
   out_6782719712638089802[24] = 0;
   out_6782719712638089802[25] = 0;
   out_6782719712638089802[26] = 0;
   out_6782719712638089802[27] = 0;
   out_6782719712638089802[28] = 0;
   out_6782719712638089802[29] = 0;
   out_6782719712638089802[30] = 0;
   out_6782719712638089802[31] = 0;
   out_6782719712638089802[32] = 0;
   out_6782719712638089802[33] = 0;
   out_6782719712638089802[34] = 0;
   out_6782719712638089802[35] = 0;
   out_6782719712638089802[36] = 0;
   out_6782719712638089802[37] = 0;
   out_6782719712638089802[38] = 0;
   out_6782719712638089802[39] = 1;
   out_6782719712638089802[40] = 0;
   out_6782719712638089802[41] = 0;
   out_6782719712638089802[42] = 0;
   out_6782719712638089802[43] = 0;
   out_6782719712638089802[44] = 0;
   out_6782719712638089802[45] = 0;
   out_6782719712638089802[46] = 0;
   out_6782719712638089802[47] = 0;
   out_6782719712638089802[48] = 0;
   out_6782719712638089802[49] = 0;
   out_6782719712638089802[50] = 0;
   out_6782719712638089802[51] = 0;
   out_6782719712638089802[52] = 0;
   out_6782719712638089802[53] = 0;
   out_6782719712638089802[54] = 0;
   out_6782719712638089802[55] = 0;
   out_6782719712638089802[56] = 0;
   out_6782719712638089802[57] = 0;
   out_6782719712638089802[58] = 0;
   out_6782719712638089802[59] = 0;
   out_6782719712638089802[60] = 0;
   out_6782719712638089802[61] = 0;
   out_6782719712638089802[62] = 1;
   out_6782719712638089802[63] = 0;
   out_6782719712638089802[64] = 0;
   out_6782719712638089802[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2777757199287464545) {
  H(in_vec, out_2777757199287464545);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5367815787538398854) {
  err_fun(nom_x, delta_x, out_5367815787538398854);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5584533176148752683) {
  inv_err_fun(nom_x, true_x, out_5584533176148752683);
}
void live_H_mod_fun(double *state, double *out_4329246194809616632) {
  H_mod_fun(state, out_4329246194809616632);
}
void live_f_fun(double *state, double dt, double *out_5992521947480762617) {
  f_fun(state,  dt, out_5992521947480762617);
}
void live_F_fun(double *state, double dt, double *out_4649644131871762932) {
  F_fun(state,  dt, out_4649644131871762932);
}
void live_h_4(double *state, double *unused, double *out_6124528919913981966) {
  h_4(state, unused, out_6124528919913981966);
}
void live_H_4(double *state, double *unused, double *out_7267858052716951485) {
  H_4(state, unused, out_7267858052716951485);
}
void live_h_9(double *state, double *unused, double *out_2464761248593869412) {
  h_9(state, unused, out_2464761248593869412);
}
void live_H_9(double *state, double *unused, double *out_3891667085728152661) {
  H_9(state, unused, out_3891667085728152661);
}
void live_h_10(double *state, double *unused, double *out_7625164934370633875) {
  h_10(state, unused, out_7625164934370633875);
}
void live_H_10(double *state, double *unused, double *out_4274723642592768505) {
  H_10(state, unused, out_4274723642592768505);
}
void live_h_12(double *state, double *unused, double *out_3240055958119241978) {
  h_12(state, unused, out_3240055958119241978);
}
void live_H_12(double *state, double *unused, double *out_886599675674218489) {
  H_12(state, unused, out_886599675674218489);
}
void live_h_35(double *state, double *unused, double *out_6730900078470589679) {
  h_35(state, unused, out_6730900078470589679);
}
void live_H_35(double *state, double *unused, double *out_3413866580635624627) {
  H_35(state, unused, out_3413866580635624627);
}
void live_h_32(double *state, double *unused, double *out_1851695392969102110) {
  h_32(state, unused, out_1851695392969102110);
}
void live_H_32(double *state, double *unused, double *out_708842067733874690) {
  H_32(state, unused, out_708842067733874690);
}
void live_h_13(double *state, double *unused, double *out_1589135582029383415) {
  h_13(state, unused, out_1589135582029383415);
}
void live_H_13(double *state, double *unused, double *out_3334532719869429421) {
  H_13(state, unused, out_3334532719869429421);
}
void live_h_14(double *state, double *unused, double *out_2464761248593869412) {
  h_14(state, unused, out_2464761248593869412);
}
void live_H_14(double *state, double *unused, double *out_3891667085728152661) {
  H_14(state, unused, out_3891667085728152661);
}
void live_h_33(double *state, double *unused, double *out_4825231622042140479) {
  h_33(state, unused, out_4825231622042140479);
}
void live_H_33(double *state, double *unused, double *out_6782719712638089802) {
  H_33(state, unused, out_6782719712638089802);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
